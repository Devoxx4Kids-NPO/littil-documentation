@startuml
    entity User {
        - id: String
        ..
        - typeId: UUID
        - accountType: AccountType
        --
        - provider: Provider
        - emailAddress: String
    }

    entity Teacher {
        - id: UUID
        ..
        - firstName: String
        - surname: String
        - location: Location
        - locale: String
        - availability: Set<DayOfWeek>
    }

    entity School {
        - id: UUID
        ..
        - name: String
        - contactPersonName: String
        - location: Location
        - locale: String
    }

    entity Location {
        - address: String
        - postalCode: String
        - longitude: Decimal
        - latitude: Decimal
    }

    enum Provider {
        AUTH0
        --
        +isAssociatedWith()
    }

    enum AccountType {
        SCHOOL
        TEACHER
    }

    entity UserSetting <<Serializable>>{
        userId: UUID
        key: String
        ..
        value: String
    }

    note left of User::id
        The id which is generated by the provider
        should contain a prefix to make sure they
        are unique cross platform. Currently only
        auth0 is supported which prefixes the id by
        default with `auth0|`.

        Also, e-mail address should be a unique
        platform wide.
    end note

    note left of UserSetting
        Settings are really generic.
        The frontend can store any
        setting they like by
        introducing a new key.
    end note

    Teacher "1..1" *-- User
    School *-- User: "1..1"

    Location -- Teacher::location: "1..1"
    Location -- School::location : "1..1"

    User --o UserSetting : "1..*"

    User::provider -- Provider
    User::accountType -- AccountType
@enduml