@startuml
skinparam sequence {
    ArrowColor #2B2E83
    GroupBackgroundColor #FFFFFF
}
actor       "Platform user"         as platform_user
boundary "Registration form"        as frontend_registration_form <<frontend>>
control "User resource"             as user_resource <<backend>>
boundary "User service"             as user_service <<backend>>
boundary "Auth0 service"            as backend_auth0_service <<backend>>
control "User repository"           as user_repository <<backend>>
entity "Littil database"            as littil_database <<backend>>

group #DFEFFC Synchronous registration sequence
platform_user -> frontend_registration_form: Submit registration form
activate frontend_registration_form #F18F2D
frontend_registration_form -> user_resource: Send form payload to backend
activate user_resource #F9B233
user_resource -> user_service : Create user
activate user_service #F18F2D
user_service -> backend_auth0_service : Register user via API
activate backend_auth0_service #F9B233
user_service <- backend_auth0_service : Return created user data
deactivate backend_auth0_service
user_service -> user_repository : Update user object with generated ID
activate user_repository #F18F2D
user_repository -> littil_database : Persist user
activate littil_database #F9B233
user_repository <- littil_database : User persisted
deactivate littil_database
user_service <- user_repository : Return persisted user
deactivate user_repository
user_resource <- user_service : map user to DTO and return
deactivate user_service
user_resource -> frontend_registration_form : Registration successful
deactivate user_resource
frontend_registration_form -> platform_user: Redirect user to login form
deactivate frontend_registration_form
end
@enduml